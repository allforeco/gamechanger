# Generated by Django 5.1.2 on 2024-10-28 13:57

import django.db.models.deletion
import tribe.locker
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=12, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('in_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tribe.country')),
                ('in_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tribe.location')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('in_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tribe.country')),
                ('in_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tribe.location')),
            ],
            bases=(models.Model, tribe.locker.Cell),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callsign', models.CharField(max_length=100)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator_of_person', to='tribe.person')),
            ],
            bases=(models.Model, tribe.locker.KeyRing),
        ),
        migrations.CreateModel(
            name='GroupNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=1000, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('in_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tribe.group')),
                ('creator', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_of_note', to='tribe.person')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='creator',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tribe.person'),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_type', models.CharField(max_length=4)),
                ('seq', models.FloatField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigner_of_role', to='tribe.person')),
                ('in_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tribe.group')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tribe.person')),
            ],
        ),
        migrations.CreateModel(
            name='SensitiveInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_type', models.CharField(choices=[('OTHR', 'Other Contact Address'), ('MAIL', 'Email Address'), ('PHON', 'Phone Number'), ('WEBS', 'Organization Website URL'), ('YOUT', 'Youtube URL'), ('TWTR', 'X (formerly twitter) URL'), ('FCBK', 'Facebook URL'), ('INSG', 'Instagram URL'), ('LNIN', 'LinkedIn URL'), ('VIME', 'Vimeo URL'), ('WHAP', 'WhatsApp group URL'), ('TLGM', 'Telegram group URL'), ('DCRD', 'Discord group URL'), ('SLAK', 'Slack group URL')], max_length=4)),
                ('seq', models.FloatField(blank=True, null=True)),
                ('secret', models.CharField(blank=True, max_length=1000, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_of_info', to='tribe.person')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tribe.person')),
            ],
        ),
    ]
